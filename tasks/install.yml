---
- name: Add EPEL repository
  package:
    name: epel-release
    state: latest
  tags:
    - skip_ansible_lint

# Around 2017-07-12, installing epel-release stopped being idempotent. The
# latest epel-release package available on a vanilla CentOS 7 box was 7.9, but
# installing 7.9 made 7.10 available. https://bugs.centos.org/view.php?id=13644
#
# As a workaround, we install the package twice so that the target machine is
# fully up-to-date.
- name: Add EPEL repository again (upgrading to 7.9 makes 7.10 available)
  package:
    name: epel-release
    state: latest
  tags:
    - skip_ansible_lint

- name: Install unzip
  package:
    name: unzip
    state: latest
  tags:
    - skip_ansible_lint  # latest

# From https://github.com/azavea/ansible-terraform/blob/develop/tasks/main.yml
- name: Check terraform version
  shell: "/usr/local/bin/terraform --version | head -n1 | grep {{ gpii_ci_worker_terraform_version }}"
  failed_when: False
  changed_when: False
  register: current_terraform_version

- name: Download terraform
  get_url:
    url: 'https://releases.hashicorp.com/terraform/{{ gpii_ci_worker_terraform_version }}/terraform_{{ gpii_ci_worker_terraform_version }}_linux_amd64.zip'
    dest: /usr/local/bin/
    mode: 0555
    checksum: '{{ gpii_ci_worker_terraform_checksum }}'
  when: current_terraform_version.rc is not defined or current_terraform_version.rc != 0
  register: terraform_downloaded

- name: Unzip and install terraform
  unarchive:
    src: /usr/local/bin/terraform_{{ gpii_ci_worker_terraform_version }}_linux_amd64.zip
    dest: /usr/local/bin/
    remote_src: True
  when: terraform_downloaded|changed
  tags: skip_ansible_lint  # [ANSIBLE0016] Tasks that run when changed should likely be handlers

- name: Check terragrunt version
  shell: "/usr/local/bin/terragrunt --version | head -n1 | grep {{ gpii_ci_worker_terragrunt_version }}"
  failed_when: False
  changed_when: False
  register: current_terragrunt_version

- name: Download and install terragrunt
  get_url:
    url: 'https://github.com/gruntwork-io/terragrunt/releases/download/v{{ gpii_ci_worker_terragrunt_version }}/terragrunt_linux_amd64'
    dest: /usr/local/bin/terragrunt
    mode: 0555
    force: yes
  when: current_terragrunt_version.rc is not defined or current_terragrunt_version.rc != 0

- name: Check kubectl version
  shell: "/usr/local/bin/kubectl --version | head -n1 | grep {{ gpii_ci_worker_kubectl_version }}"
  failed_when: False
  changed_when: False
  register: current_kubectl_version

- name: Download and install kubectl
  get_url:
    url: 'https://storage.googleapis.com/kubernetes-release/release/{{ gpii_ci_worker_kubectl_version }}/bin/linux/amd64/kubectl'
    dest: /usr/local/bin/kubectl
    mode: 0555
    force: yes
  when: current_kubectl_version.rc is not defined or current_kubectl_version.rc != 0

- name: Check kops version
  shell: "/usr/local/bin/kops --version | head -n1 | grep {{ gpii_ci_worker_kops_version }}"
  failed_when: False
  changed_when: False
  register: current_kops_version

- name: Download and install kops
  get_url:
    url: 'https://github.com/kubernetes/kops/releases/download/{{ gpii_ci_worker_kops_version }}/kops-linux-amd64'
    dest: /usr/local/bin/kops
    mode: 0555
    force: yes
  when: current_kops_version.rc is not defined or current_kops_version.rc != 0

- name: Install pip
  package:
    name: "{{ item }}"
    state: latest
  with_items:
    - gcc
    - python-devel
    - python2-pip
  tags:
    - skip_ansible_lint

- name: Install aws cli
  pip:
    name: awscli

- name: Check jq version
  shell: "/usr/local/bin/jq --version | head -n1 | grep {{ gpii_ci_worker_jq_version }}"
  failed_when: False
  changed_when: False
  register: current_jq_version

- name: Download and install jq
  get_url:
    url: 'https://github.com/stedolan/jq/releases/download/jq-{{ gpii_ci_worker_jq_version }}/jq-linux64'
    dest: /usr/local/bin/jq
    mode: 0555
    force: yes
  when: current_jq_version.rc is not defined or current_jq_version.rc != 0

- name: Check for rvm gpg key
  command: gpg --list-keys
  become: true
  become_user: gitlab-runner
  register: gpg_list_keys
  changed_when: false

- name: Import rvm gpg key
  # Based on install instructions from https://rvm.io/
  command: gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
  become: true
  become_user: gitlab-runner
  when: gpg_list_keys.stdout is not defined or gpg_list_keys.stdout.find('Michal Papis (RVM signing) <mpapis@gmail.com>') == -1

- name: Check for rvm installation
  stat:
    path: ~gitlab-runner/.rvm/bin/rvm
  register: rvm_exists

- name: Download rvm installer
  get_url:
    url: 'https://get.rvm.io'
    dest: /tmp/rvm_installer.bash
    mode: 0555
  become: true
  become_user: gitlab-runner
  when: rvm_exists.stat.exists == False

- name: Install rvm
  command: /tmp/rvm_installer.bash stable
  become: true
  become_user: gitlab-runner
  when: rvm_exists.stat.exists == False

- name: Check for ruby installation
  stat:
    path: ~gitlab-runner/.rvm/rubies/ruby-{{ gpii_ci_worker_ruby_version }}/bin/ruby
  register: ruby_exists

- name: Install ruby prerequisites
  command: ~gitlab-runner/.rvm/bin/rvm requirements {{ gpii_ci_worker_ruby_version }}
  when: ruby_exists.stat.exists == False

- name: Install ruby with rvm
  # We install rvm locally for the gitlab-runner user only (see
  # https://issues.gpii.net/browse/GPII-2389?focusedCommentId=26403&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-26403)
  #
  # This means we need to use the gitlab-runner user's local dotfiles. That's
  # sort of tricky with ansible. This explicit call to "sudo -i" is a
  # workaround (see https://stackoverflow.com/a/32030344 and/or
  # https://github.com/ansible/ansible/issues/4854#issuecomment-39284921).
  command: sudo -i -u gitlab-runner rvm install {{ gpii_ci_worker_ruby_version }}
  when: ruby_exists.stat.exists == False

- name: Check for bundler installation
  stat:
    path: ~gitlab-runner/.rvm/gems/ruby-{{ gpii_ci_worker_ruby_version }}/bin/bundle
  register: bundler_exists

- name: Install bundler with rvm
  command: sudo -i -u gitlab-runner gem install bundler
  when: bundler_exists.stat.exists == False

- name: Check for rake installation
  stat:
    path: ~gitlab-runner/.rvm/gems/ruby-{{ gpii_ci_worker_ruby_version }}/bin/rake
  register: rake_exists

- name: Install rake with rvm
  command: sudo -i -u gitlab-runner gem install rake
  when: rake_exists.stat.exists == False
